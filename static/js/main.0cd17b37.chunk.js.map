{"version":3,"sources":["screens/bingo/constants.js","utils/helper.js","screens/bingo/components/BingoSquare.js","screens/bingo/components/BingoCard.js","screens/bingo/containers/BingoCard.js","App.js","reportWebVitals.js","index.js"],"names":["colorPallete","winMatrix","indexes","alreadyBingo","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","isSelected","cardColor","slice","BingoSquare","text","index","handleClick","disabled","onClick","className","style","backgroundColor","textDecoration","BingoCard","data","map","square","Home","props","componentDidMount","setState","squares","squareIndex","state","checkWinner","forEach","item","a","b","c","d","e","winState","setTimeout","this","position","width","height","zIndex","fire","particleCount","spread","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cd17b37.chunk.js","sourcesContent":["export const colorPallete = [\"#b8dbf9\", \"#c5f2db\", \"#ecd7fe\", \"#f8c2b6\"]\n\nexport const phrases = [\n    \"I need to jump on another call\",\n    \"We lost you for a minute there\",\n    \"You're on mute\",\n    \"Do we have everyone here?\",\n    \"Can you see my screen\",\n    \"Can everyone mute themselves please\",\n    \"Let's take this offline\",\n    \"Conscious there’s only X minutes left\",\n    \"I have a hard stop at...\",\n    \"Sorry, I didn't catch that, can you repeat?\",\n    \"I'll have to get back to you.\",\n    \"Can you see my screen?\",\n    \"Is _____ on the call?\",\n    \"Um, ____ you're still sharing...\",\n    \"Sorry, I was having connection issues.\",\n    \"Is there anything else to discuss?\",\n    \"I think there's a lag.\",\n    \"(Sound of someone typing, possible with a hammer)\",\n    \"Can you email that to everyone?\",\n    \"Hi, who just joined?\",\n    \"Sorry, I couldn't log in\",\n    \"Hello, hello?\",\n    \"Let’s finish / close the call, thank you everyone.\",\n    \"Sorry can you say that again\",\n    \"Are we waiting for anyone else\",\n]\n\nexport const winMatrix = [\n    {\n        indexes: [0, 1, 2, 3, 4],\n        alreadyBingo: false\n    },\n    {\n        indexes: [5, 6, 7, 8, 9],\n        alreadyBingo: false\n    },\n    {\n        indexes: [10, 11, 12, 13, 14],\n        alreadyBingo: false\n    },\n    {\n        indexes: [15, 16, 17, 18, 19],\n        alreadyBingo: false\n    },\n    {\n        indexes: [20, 21, 22, 23, 24],\n        alreadyBingo: false\n    },\n    {\n        indexes: [0, 5, 10, 15, 20],\n        alreadyBingo: false\n    },\n    {\n        indexes: [1, 6, 11, 16, 21],\n        alreadyBingo: false\n    },\n    {\n        indexes: [2, 7, 12, 17, 22],\n        alreadyBingo: false\n    },\n    {\n        indexes: [3, 8, 13, 18, 23],\n        alreadyBingo: false\n    },\n    {\n        indexes: [4, 9, 14, 19, 24],\n        alreadyBingo: false\n    },\n    {\n        indexes: [0, 6, 12, 18, 24],\n        alreadyBingo: false\n    },\n    {\n        indexes: [4, 8, 12, 16, 20],\n        alreadyBingo: false\n    }\n]","import { colorPallete } from \"../screens/bingo/constants\";\n\nexport const shuffle = (array) => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[currentIndex].isSelected = currentIndex === 12 ? true : false;\n        array[currentIndex].cardColor = colorPallete[Math.floor(Math.random() * 3)]\n        array[randomIndex] = temporaryValue;\n    }\n    return array.slice();\n}","import React from 'react'\n\n\nconst BingoSquare = ({ text, isSelected, cardColor, index, handleClick }) => {\n    return (\n        <button key={index} disabled={isSelected} onClick={() => handleClick(index)} className=\"bingo-square\" style={{ backgroundColor: cardColor }}>\n            <p style={{ textDecoration: isSelected ? \"line-through\" : \"none\" }}>{text}</p>\n        </button>\n    )\n}\n\nexport default BingoSquare","import React from 'react'\nimport BingoSquare from './BingoSquare'\nimport '../style.css'\n\nconst BingoCard = ({ data, handleClick }) => {\n    return (\n        <div className={\"card\"}>\n            {data.slice(0, 25).map((square, index) =>\n                index === 12 ? \n                <BingoSquare text={\"CONF Call 🤐 BINGO\"} cardColor={\"#fff\"} index={index} handleClick={() => handleClick(index)} />\n                : \n                <BingoSquare text={square.text} isSelected={square.isSelected} cardColor={square.cardColor} index={index} handleClick={() => handleClick(index)} />\n            )}\n        </div>\n    )\n}\n\nexport default BingoCard","import React from 'react'\nimport { shuffle } from '../../../utils/helper'\nimport { BingoCardComponent } from '../components'\nimport data from '../../../assets/resource/data.json';\nimport { winMatrix } from '../constants';\nimport Confetti from 'react-canvas-confetti';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            squares: data,\n            winState: false,\n            winMatrix: winMatrix\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({ squares: shuffle(data) })\n    }\n\n    handleClick = (squareIndex) => {\n        let { squares } = this.state\n        squares = squares.map((square, index) => {\n            if (index === squareIndex) {\n                !!square.isSelected ? square.isSelected = false : square.isSelected = true;\n            }\n            return square;\n        })\n        this.checkWinner(squares)\n        this.setState({ squares });\n    }\n\n    checkWinner = (squares) => {\n        const { winMatrix } = this.state\n        winMatrix.forEach(item => {\n            if (!item.alreadyBingo) {\n                const [a, b, c, d, e] = item.indexes;\n                if (squares[a].isSelected && squares[b].isSelected && squares[c].isSelected && squares[d].isSelected && squares[e].isSelected) {\n                    item.alreadyBingo = true\n                    this.setState({ winState: true, winMatrix })\n                    setTimeout(() => {\n                        this.setState({ winState: false })\n                    }, 3000);\n                }\n            }\n        })\n    }\n\n\n    render() {\n        const { squares, winState } = this.state\n        const style = {\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            zIndex: winState ? 1000 : -1\n        }\n        return (\n            <div>\n                <Confetti style={style} fire={winState} particleCount={1000} spread={360} />\n                <div className=\"container\">\n                    <BingoCardComponent\n                        data={squares}\n                        winState={winState}\n                        handleClick={this.handleClick}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Home","import { BingoCard } from './screens/bingo';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BingoCard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}